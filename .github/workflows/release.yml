name: Release

on:
  push:
    branches: [main]

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: |
          cd frontend
          npm ci

      - name: Fetch all tags
        run: git fetch --tags

      - name: Determine next version
        id: bump
        run: |
          cd frontend
          BUMP=$(npx -y \
            -p conventional-recommended-bump@9 \
            -p conventional-changelog-conventionalcommits@7 \
            conventional-recommended-bump -p conventionalcommits)
          if [ -z "$BUMP" ]; then BUMP=patch; fi
          npm version "$BUMP" --no-git-tag-version
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Update CHANGELOG
        run: |
          # 전체 변경 이력을 유지 (-r 0)
          npx -y \
            -p conventional-changelog-cli@5 \
            -p conventional-changelog-conventionalcommits@7 \
            conventional-changelog -p conventionalcommits -i CHANGELOG.md -s -r 0

      - name: Commit version & changelog
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add CHANGELOG.md frontend/package.json

          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi

          git commit -m "chore(release): v${{ steps.bump.outputs.version }}"
          git tag -a "v${{ steps.bump.outputs.version }}" -m "Release v${{ steps.bump.outputs.version }}"
          git push origin main --tags

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.bump.outputs.version }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
